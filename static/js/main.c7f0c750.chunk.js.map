{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","App.module.css","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-operations.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","redux/contacts/contacts-slice.js","components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","App.js","reportWebVitals.js","redux/store/store.js","index.js"],"names":["module","exports","ContactForm","onSubmit","className","css","contactForm","htmlFor","type","name","id","formInput","pattern","title","required","fetchContacts","createAsyncThunk","a","axios","get","result","data","toast","error","addContact","contact","post","deleteContact","delete","ContactListItem","dispatch","useDispatch","contactItem","number","onClick","ContactList","contacts","contactList","map","ItemsSlice","createSlice","initialState","items","filter","status","reducers","filterContacts","state","action","payload","extraReducers","fulfilled","pending","_","rejected","push","actions","Filter","filterByName","filterInput","onChange","getContacts","getFilter","getSelectedContacts","createSelector","toLowerCase","includes","App","useSelector","useEffect","selectedContacts","container","e","preventDefault","target","elements","value","find","filterName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","contactsReduser","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f0c750.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2cWy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__3LoHO\",\"number\":\"ContactListItem_number__3hdlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2JkdE\"};","import PropTypes from 'prop-types';\r\nimport css from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  return <form onSubmit={onSubmit} className={css.contactForm}>\r\n    <label htmlFor=\"name\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      className={css.formInput}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n       required\r\n      />\r\n    <label htmlFor=\"number\">Number</label>\r\n    <input\r\n     type=\"tel\"\r\n     name=\"number\"\r\n     id=\"number\"\r\n     className={css.formInput}\r\n     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n     title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n     required\r\n    />\r\n    <button type=\"submit\">Add contact</button>\r\n    </form>\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n};\r\nexport default ContactForm;","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      const result = await axios.get(\n        'https://611a211bcbf1b30017eb54f5.mockapi.io/api/v1/contacts',\n      );\n      return result.data;\n    } catch (error) {\n      toast.error('Something went wrong');\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async contact => {\n    try {\n      const result = await axios.post(\n        'https://611a211bcbf1b30017eb54f5.mockapi.io/api/v1/contacts',\n        contact,\n      );\n      return result.data;\n    } catch (error) {\n      toast.error('Something went wrong');\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async id => {\n    try {\n      await axios.delete(\n        `https://611a211bcbf1b30017eb54f5.mockapi.io/api/v1/contacts/${id}`,\n      );\n      return id;\n    } catch (error) {\n      toast.error('Something went wrong');\n    }\n  },\n);\n","import PropTypes from 'prop-types';\r\nimport css from './ContactListItem.module.css';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ContactListItem = ({ contact}) => {\r\n  \r\nconst dispatch = useDispatch();\r\nconst deleteItem = (id) => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n\r\nreturn (\r\n    <li className={css.contactItem}>\r\n        <span className={css.name}>{contact.name}</span>\r\n        <span className={css.number}>{contact.number}</span>\r\n        <button type=\"button\" onClick={() => deleteItem(contact.id)}>Delete</button>\r\n    </li>);\r\n}\r\n    \r\nContactListItem.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import PropTypes from 'prop-types';\r\nimport css from './ContactList.module.css';\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n      <ul className={css.contactList}>\r\n        {contacts.map(contact =>\r\n          <ContactListItem contact={contact} key={contact.id}/>)}\r\n      </ul>);\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactList;","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\n\nconst ItemsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    filter: '',\n    status: null,\n    error: null,\n  },\n\n  reducers: {\n    filterContacts: (state, action) => {\n      state.filter = action.payload;\n    },\n  },\n\n  extraReducers: {\n    [fetchContacts.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = null;\n      state.error = null;\n    },\n    [fetchContacts.pending]: (state, _) => {\n      state.status = 'loading';\n    },\n    [fetchContacts.rejected]: (state, _) => {\n      state.status = null;\n      state.error = 'Error';\n    },\n\n    [addContact.fulfilled]: (state, action) => {\n      state.items.push(action.payload);\n      state.status = null;\n      state.error = null;\n    },\n    [addContact.pending]: (state, _) => {\n      state.status = 'loading';\n      state.error = null;\n    },\n    [addContact.rejected]: (state, _) => {\n      state.status = null;\n      state.error = 'Error';\n    },\n    [deleteContact.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        contact => contact.id !== action.payload,\n      );\n    },\n  },\n});\n\nexport const { filterContacts } = ItemsSlice.actions;\nexport default ItemsSlice.reducer;\n","import PropTypes from 'prop-types';\r\nimport css from './Filter.module.css';\r\n\r\nconst Filter = ({ filterByName }) => {\r\n    return (\r\n        <div className={css.filter}>\r\n            <label htmlFor=\"filter\">Find contacts by name</label>\r\n            <input type=\"text\" name=\"filter\" id=\"filter\" className={css.filterInput} onChange={filterByName} />\r\n        </div>);\r\n};\r\n\r\nFilter.propTypes = {\r\n    filterByName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getSelectedContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n  },\n);\n","import toast, { Toaster } from 'react-hot-toast';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport { filterContacts } from './redux/contacts/contacts-slice';\nimport Filter from './components/Filter/Filter';\nimport css from './App.module.css';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  addContact,\n} from './redux/contacts/contacts-operations';\nimport {\n  getContacts,\n  getFilter,\n  getSelectedContacts,\n} from './redux/contacts/contacts-selectors';\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filter = useSelector(getFilter);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (existingContact) {\n      return toast.error(`${name} is already in contacts!!!`);\n    }\n    dispatch(addContact({ name, number }));\n\n    e.target.elements.name.value = '';\n    e.target.elements.number.value = '';\n  };\n\n  const handleChange = e => {\n    const filterName = e.target.value.toLowerCase();\n    dispatch(filterContacts(filterName));\n  };\n\n  const selectedContacts = useSelector(getSelectedContacts);\n\n  return (\n    <div className={css.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={onSubmit} />\n\n      <h2>Contacts</h2>\n      <Filter filterByName={handleChange} />\n      {!filter && <ContactList contacts={contacts} />}\n      {filter && <ContactList contacts={selectedContacts} />}\n      <Toaster />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReduser from '../contacts/contacts-slice';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}